                                                text  spam
0  Subject: naturally irresistible your corporate...     1
1  Subject: the stock trading gunslinger  fanny i...     1
2  Subject: unbelievable new homes made easy  im ...     1
3  Subject: 4 color printing special  request add...     1
4  Subject: do not have money , get software cds ...     1
Index(['text', 'spam'], dtype='object')
[nltk_data] Downloading package punkt to
[nltk_data]     C:\Users\nisch\AppData\Roaming\nltk_data...
[nltk_data]   Package punkt is already up-to-date!
[nltk_data] Downloading package stopwords to
[nltk_data]     C:\Users\nisch\AppData\Roaming\nltk_data...
[nltk_data]   Package stopwords is already up-to-date!
[nltk_data] Downloading package wordnet to
[nltk_data]     C:\Users\nisch\AppData\Roaming\nltk_data...
[nltk_data]   Package wordnet is already up-to-date!
                                                text  spam
0  Subject: naturally irresistible your corporate...     1
1  Subject: the stock trading gunslinger  fanny i...     1
2  Subject: unbelievable new homes made easy  im ...     1
3  Subject: 4 color printing special  request add...     1
4  Subject: do not have money , get software cds ...     1
Index(['text', 'spam'], dtype='object')
Preprocessing email texts...
Preprocessing complete.
Splitting the dataset into training and testing sets...
Dataset split complete.
Creating and training the pipeline...
Training complete.
Making predictions on the test set...
Evaluating the model...
Accuracy: 0.8821989528795812
Classification Report:
               precision    recall  f1-score   support

           0       0.86      1.00      0.93       856
           1       1.00      0.53      0.70       290

    accuracy                           0.88      1146
   macro avg       0.93      0.77      0.81      1146
weighted avg       0.90      0.88      0.87      1146

Starting hyperparameter tuning...
Fitting 3 folds for each of 8 candidates, totalling 24 fits
[CV] END classifier__alpha=0.1, vectorizer__max_df=0.75, vectorizer__ngram_range=(1, 1); total time=   5.2s
[CV] END classifier__alpha=0.1, vectorizer__max_df=0.75, vectorizer__ngram_range=(1, 1); total time=   5.2s
[CV] END classifier__alpha=0.1, vectorizer__max_df=0.75, vectorizer__ngram_range=(1, 1); total time=   5.7s
[CV] END classifier__alpha=0.1, vectorizer__max_df=0.75, vectorizer__ngram_range=(1, 2); total time=   7.2s
[CV] END classifier__alpha=0.1, vectorizer__max_df=0.75, vectorizer__ngram_range=(1, 2); total time=   7.0s
[CV] END classifier__alpha=0.1, vectorizer__max_df=0.75, vectorizer__ngram_range=(1, 2); total time=   7.0s
[CV] END classifier__alpha=0.1, vectorizer__max_df=1.0, vectorizer__ngram_range=(1, 1); total time=   5.2s
[CV] END classifier__alpha=0.1, vectorizer__max_df=1.0, vectorizer__ngram_range=(1, 1); total time=   5.3s
[CV] END classifier__alpha=0.1, vectorizer__max_df=1.0, vectorizer__ngram_range=(1, 1); total time=   5.5s
[CV] END classifier__alpha=0.1, vectorizer__max_df=1.0, vectorizer__ngram_range=(1, 2); total time=   6.9s
[CV] END classifier__alpha=0.1, vectorizer__max_df=1.0, vectorizer__ngram_range=(1, 2); total time=   6.8s
[CV] END classifier__alpha=0.1, vectorizer__max_df=1.0, vectorizer__ngram_range=(1, 2); total time=   6.9s
[CV] END classifier__alpha=1.0, vectorizer__max_df=0.75, vectorizer__ngram_range=(1, 1); total time=   5.4s
[CV] END classifier__alpha=1.0, vectorizer__max_df=0.75, vectorizer__ngram_range=(1, 1); total time=   5.2s
[CV] END classifier__alpha=1.0, vectorizer__max_df=0.75, vectorizer__ngram_range=(1, 1); total time=   5.4s
[CV] END classifier__alpha=1.0, vectorizer__max_df=0.75, vectorizer__ngram_range=(1, 2); total time=   7.0s
[CV] END classifier__alpha=1.0, vectorizer__max_df=0.75, vectorizer__ngram_range=(1, 2); total time=   6.9s
[CV] END classifier__alpha=1.0, vectorizer__max_df=0.75, vectorizer__ngram_range=(1, 2); total time=   7.0s
[CV] END classifier__alpha=1.0, vectorizer__max_df=1.0, vectorizer__ngram_range=(1, 1); total time=   5.6s
[CV] END classifier__alpha=1.0, vectorizer__max_df=1.0, vectorizer__ngram_range=(1, 1); total time=   5.3s
[CV] END classifier__alpha=1.0, vectorizer__max_df=1.0, vectorizer__ngram_range=(1, 1); total time=   5.2s
[CV] END classifier__alpha=1.0, vectorizer__max_df=1.0, vectorizer__ngram_range=(1, 2); total time=   6.8s
[CV] END classifier__alpha=1.0, vectorizer__max_df=1.0, vectorizer__ngram_range=(1, 2); total time=   6.9s
[CV] END classifier__alpha=1.0, vectorizer__max_df=1.0, vectorizer__ngram_range=(1, 2); total time=   6.9s
Hyperparameter tuning complete.
Best Parameters: {'classifier__alpha': 0.1, 'vectorizer__max_df': 0.75, 'vectorizer__ngram_range': (1, 1)}
Retraining model with best parameters...
Making predictions with the best model on the test set...
Evaluating the best model...
Accuracy with Best Model: 0.9808027923211169
Classification Report with Best Model:
               precision    recall  f1-score   support

           0       0.98      1.00      0.99       856
           1       0.99      0.93      0.96       290

    accuracy                           0.98      1146
   macro avg       0.98      0.96      0.97      1146
weighted avg       0.98      0.98      0.98      1146

Script execution complete.